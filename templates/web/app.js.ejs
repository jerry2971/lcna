const path = require('path');
const express = require('express');
const cookieParser = require('cookie-parser');
const morgan = require('morgan');
const queue = require('express-queue');
const helmet = require('helmet');
<% if (jwt) { -%>
const { jwtVerify } = require('./lib/jwt');
<% } -%><% if (winston) { -%>
const winston = require('./lib/winston');
<% } -%>

const app = express();
<% if (winston) { -%>const TITLE = 'APP_MSG';
<% } -%>

// queue
app.use(queue({ activeLimit: 5, queuedLimit: -1 }));

// security header
app.use();

// log
app.use(morgan('combined'<% if (winston) { %>, { stream: winston.stream }<% } %>));

app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());

// public file
app.use(express.static(path.join(__dirname, 'public')));
<% if (jwt) { %>

// jwt server
app.use('/jwt', require('./routes/jwt'));

// check jwt request
app.all('/api/*', (req, res, next) => {
  jwtVerify(req.body.token, (err, decoded) => {
    if (err) {
      <% if (winston) { %>winston.log('info', { title: TITLE, msg: err.name.concat(':', err.message) });
<% } else { %>console.log({ status: false, msg: err.message });
<% } %>
      res.status(200).json({ status: false, msg: err.message });
      return;
    }
<% if (winston) { %>    winston.log('debug', { title: TITLE, decoded });
<% } -%>    req.body = decoded;
    next();
  });
});
<% } -%>

// api routers
app.use('/api/api', require('./routes/api'));

// error handler
app.use((err, req, res, next) => {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};
<% if(winston){%>  // add this line to include winston logging
  winston.error();
<% } %>
  res.status(err.status || 500).json({ status: false, msg: 'error' });
});

module.exports = app;
