<% if(flow){ %>// @flow
<% } %>const httpRequest = (method<% if(flow){ %>: string<% } %>, src<% if(flow){ %>: string<% } %>, jsonBody<% if(flow){ %>: any<% } %>, callback<% if(flow){ %>: (statusCode: number, response: any) => void<% } %>) => {
  const request = new XMLHttpRequest();
  request.open(method, src);
  request.setRequestHeader('Content-Type', 'application/json');
  request.setRequestHeader('Cache-Control', 'no-cache');
  request.send(JSON.stringify(jsonBody));
  request.onload = (e) => {
    callback(request.status, JSON.parse(request.responseText));
  };
};
<% if(jwt){ %>
const jwtRequest = (method<% if(flow){ %>: string<% } %>, src<% if(flow){ %>: string<% } %>, jsonBody<% if(flow){ %>: any<% } %>, callback<% if(flow){ %>: (statusCode: number, response: any) => void<% } %>) => {
  httpRequest('POST', 'jwt', jsonBody, (status, signBody) => {
    httpRequest(method, src, signBody, callback);
  });
};
<% } %>
module.exports = {
  <% if(jwt){ %>jwtRequest,
  <% } %>httpRequest
};
  