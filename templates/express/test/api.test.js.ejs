// @flow
const request = require('supertest');
const app = require('./../app');
const { jwtSign, jwtVerify} = require('./../lib/jwt');

const Input = {
  user: 'user',
  phone: 123
};
const TOKEN = jwtSign(Input);

// ============ Test public file request ============
describe('Test public file request', () => {
  test('It should response GET method', () => {
    return request(app).get('/').then(response => {
      expect(response.statusCode).toBe(200);
    });
  });
  test('It should be 404', () => {
    return request(app).get('/something').then(response => {
      expect(response.statusCode).toBe(404);
    });
  });
  test('It should response POST method', () => {
    return request(app).post('/').then(response => {
      expect(response.statusCode).toBe(404);
    });
  });
});

// ============== Test jwt sign request =============
describe('Test jwt sign request', () => {
  test('It should response the POST method', (done) => {
    request(app).post('/jwt').send(Input).then(response => {
      expect(response.statusCode).toBe(200);
      jwtVerify(TOKEN,(err,encode)=>{
        expect(encode.user).toBe(Input.user);
        expect(encode.phone).toBe(Input.phone);
        done();
      });
    });
  });
});

// ================ Test api request ================
describe('Test api request', () => {
  test('It should response the GET method', () => {
    return request(app).get('/api/api').send({token: TOKEN}).then(response => {
      expect(response.statusCode).toBe(200);
    });
  });
  test('It should response 404', () => {
    return request(app).post('/api/api').send({token: TOKEN}).then(response => {
      expect(response.statusCode).toBe(404);
    });
  });
  test('Jwt must be provided', () => {
    return request(app).get('/api/api').then(response => {
      expect(response.statusCode).toBe(400);
    });
  });
  test('Jwt must be provided', () => {
    return request(app).post('/api/api').then(response => {
      expect(response.statusCode).toBe(400);
    });
  });
});


